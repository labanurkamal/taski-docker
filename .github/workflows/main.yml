name: Main Taski workflow

on:
  push:
    branches:
      - main

jobs:
  python-tests:
      runs-on: ubuntu-latest
      services:
        postgres:
          image: postgres:13.10
          env:
            POSTGRES_USER: django_user
            POSTGRES_PASSWORD: django_password
            POSTGRES_DB: django_db
          ports:
            - 5432:5432
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      steps:
        - name: Pull out code
          uses: actions/checkout@v3
        - name: Set Python langueges
          uses: actions/setup-python@v4
          with:
            python-version: 3.9
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip 
            pip install flake8==6.0.0 flake8-isort==6.0.0
            pip install -r ./backend/requirements.txt
        - name: Run flake8 and test
          env:
            POSTGRES_USER: django_user
            POSTGRES_PASSWORD: django_password
            POSTGRES_DB: django_db
            DB_HOST: 127.0.0.1
            DB_PORT: 5432 
          run: |
            python -m flake8 backend/
            cd backend/
            python manage.py test
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - python-tests
    steps:
      - 
        name: Check out the repo
        uses: actions/checkout@v3
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login Doker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}
      -
        name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taski_backend:latest
  frontend_tests:
    name: Frontend test
    runs-on: ubuntu-latest

    steps:
      -
        name: Check out to repo
        uses: actions/checkout@v3
      -
        name: Set up NoteJS
        uses: actions/setup-node@v3
        with:
          node-versions: 18
      -
        name: Install dependencies
        run: |
          cd frontend/
          npm ci
      -
        name: Test frontend
        run: |
          cd frontend/
          npm run test
  build_frontend_and_push_to_docker_hub:
    name: Push frontend Docker image to Dockerhub
    runs-on: ubuntu-latest
    needs:
      - frontend_tests
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v3
      -
        name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - 
        name: Login Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}
      -
        name: Push frontend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taski_frontend:latest
  build_gateway_and_push_to_docker_hub:
    name: Push gateway Docker image to DockerHub
    runs-on: ubuntu-latest

    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v3
      -
        name: Set up Docker
        uses: docker/setup-buildx-action@v2
      -
        name: Login Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}
      -
        name: Push gateway to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./gateway/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taski_gateway:latest




 
